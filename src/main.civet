import React, { useCallback } from react
import { createRoot } from 'react-dom/client'
import {
  ReactFlow,
  Background,
  useNodesState,
  useEdgesState,
  addEdge,
  type OnConnect
} from '@xyflow/react'

import '@xyflow/react/dist/style.css'

initialNodes := [
  id: '1'
  position: { x: 0, y: 0 }
  data: { label: '1' }
  ,
  id: '2'
  position: { x: 0, y: 100 }
  data: { label: 'two' }
];

initialEdges := [ id: 'e1-2', source: '1', target: '2' ]

function App
  [nodes, setNodes, onNodesChange] := useNodesState(initialNodes)
  [edges, setEdges, onEdgesChange] := useEdgesState(initialEdges)

  onConnect: OnConnect := useCallback(
    (params) => setEdges((eds) => addEdge(params, eds)),
    [setEdges],
  )

  <ReactFlow
      proOptions={{hideAttribution: true}}
      nodes={nodes}
      edges={edges}
      onNodesChange={onNodesChange}
      onEdgesChange={onEdgesChange}
      onConnect={onConnect}
      fitView
    >
      <Background />


const main = document.querySelector('main')

if(!main) throw new Error('no main element!')

createRoot(main).render(
  <App />
)
