"civet react"

import React, { useCallback, useMemo } from react
import { createRoot } from 'react-dom/client'
import {
  ReactFlow,
  Background,
  useNodesState,
  useEdgesState,
  addEdge,
  type OnConnect
  type Edge
} from '@xyflow/react'

import '@xyflow/react/dist/style.css'

initialNodes := [
  id: '1'
  position: { x: 0, y: 0 }
  data: { label: '1' }
  type: 'javascript'
];

initialEdges: Edge[] := []

function JavascriptNode
  <textarea
    .nodrag
    onInput={=>} />


function App
  [nodes, setNodes, onNodesChange] := useNodesState(initialNodes)
  [edges, setEdges, onEdgesChange] := useEdgesState(initialEdges)
  nodeTypes := useMemo(=> javascript: JavascriptNode, [])

  onConnect: OnConnect := useCallback(
    (params) => setEdges((eds) => addEdge(params, eds)),
    [setEdges],
  )

  <ReactFlow
      proOptions={{hideAttribution: true}}
      fitView
      {
        nodes
        edges
        nodeTypes
        onNodesChange
        onEdgesChange
        onConnect
      }
    >
      <Background />


const main = document.querySelector('main')

if(!main) throw new Error('no main element!')

createRoot(main).render(
  <App />
)
